<<<<<<< HEAD
import React, { Component } from "react";
import "./App.css";
import Web3 from "web3";
import Color from "../abis/Color.json";
import Add from "./add/Add";

class App extends Component {
  async componentWillMount() {
    await this.loadWeb3();
    await this.loadBlokchainData();
  }

  async loadWeb3() {
    if (window.ethereum) {
      window.web3 = new Web3(window.ethereum);
      await window.ethereum.enable();
    } else if (window.web3) {
      window.web3 = new Web3(window.web3.currrentProvider);
    } else {
      window.alert(
        "Non-Ethereum browser detected. You should consider trying MetaMask!"
      );
    }
  }

  async loadBlokchainData() {
    const web3 = window.web3;

    const accounts = await web3.eth.getAccounts();
    this.setState({ account: accounts[0] });

    const networkId = await web3.eth.net.getId();
    const networkData = Color.networks[networkId];

    if (networkData) {
      const abi = Color.abi;
      const address = networkData.address;
      const contract = new web3.eth.Contract(abi, address);

      this.setState({ contract });
      const totalSupply = await contract.methods.totalSupply().call();
      this.setState({ totalSupply });

      for (let i = 1; i <= totalSupply; i++) {
        const color = await contract.methods.colors(i - 1).call();
        this.setState({
          colors: [...this.state.colors, color]
        });
      }
    } else {
      window.alert("Smart contract not deployed to detected network.");
    }
  }

  mint = color => {
    this.state.contract.methods
      .mint(color)
      .send({ from: this.state.account })
      .once("receipt", receipt => {
        this.setState({
          colors: [...this.state.colors, color]
        });
      });
  };

  constructor(props) {
    super(props);
    this.state = {
      account: "",
      contract: null,
      totalSupply: 0,
      colors: []
    };
  }

  render() {
    return (
      <div>
        <nav className="navbar navbar-dark fixed-top bg-dark flex-md-nowrap p-0 shadow">
          <a
            className="navbar-brand col-sm-3 col-md-2 mr-0"
            href="http://artkdev.online"
            target="_blank"
            rel="noopener noreferrer"
          >
            ArtKDev
          </a>
          <ul className="navbar-nav px-3">
            <li className="nav-item text-nowrap d-none d-sm-none d-sm-block">
              <small className="text-white">
                <span id="accaount">{this.state.account}</span>
              </small>
            </li>
          </ul>
        </nav>
        <div className="container mt-5">
          <div className="row text-center">
            <Add mint={this.mint} />
          </div>
          <hr />
          <div className="row text-center">
            {this.state.colors.map((color, key) => {
              return (
                <div key={key} className="col mb-3">
                  <div
                    className="token"
                    style={{ backgroundColor: color }}
                  ></div>
                  <div>{color}</div>
                </div>
              );
            })}
          </div>
        </div>
      </div>
=======
import React, { useState, useEffect } from "react";
import "./App.css";
import Navbar from "./Navbar";
import PageColors from "./page_colors/PageColors";
import { Web3Api } from "../api/api";

const App = () => {
  let [account, setAccount] = useState(null);
  let [contract, setContract] = useState({});
  let [totalSupply, setTotalSupply] = useState(0);
  let [colors, setColors] = useState([]);

  useEffect(() => {
    Web3Api.loadWeb3();
  }, []);

  useEffect(() => {
    Web3Api.loadBlockchainData(
      setAccount,
      setContract,
      setTotalSupply,
      setColors
>>>>>>> 92e907f
    );
  }, []);

  const mint = color => {
    contract.methods
      .mint(color)
      .send({ from: account })
      .once("receipt", receipt => {
        setColors([...colors, color]);
      });
  };

  return (
    <div className="container-fluid">
      <Navbar account={account} />
      <PageColors mint={mint} colors={colors} />
    </div>
  );
};

export default App;
